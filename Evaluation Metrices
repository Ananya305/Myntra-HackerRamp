# Importing necessary libraries
import numpy as np
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Sample dataset (for demonstration purposes)
# You should replace this with your actual dataset
image_features = np.array([[1, 2], [2, 3], [3, 4], [5, 6], [7, 8], [9, 10]])
cluster_labels = np.array([0, 0, 0, 1, 1, 1])

# Splitting the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Creating the k-NN classifier
k = 3  # Number of neighbors
knn = KNeighborsClassifier(n_neighbors=k, metric='euclidean')  # You can change the metric here

# Training the classifier
knn.fit(X_train, y_train)

# Making predictions
y_pred = knn.predict(X_test)

# Evaluating the model
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy * 100:.2f}%')

# Predicting the class of a new sample
new_sample = np.array([[4, 5]])
prediction = knn.predict(new_sample)
print(f'Predicted class for the new sample {new_sample}: {prediction[0]}')
